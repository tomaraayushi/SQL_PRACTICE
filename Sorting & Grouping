--Q1
select
    teacher_id,
    count(distinct subject_id) as cnt
from Teacher
group by teacher_id;

--Q2
select
    activity_date as day,
    count(distinct user_id)as active_users
from Activity
where activity_date between ('2019-07-27'::date - interval '29' day) and '2019-07-27'
group by activity_date;

--Q3
with year_rank as (
    select
        product_id,
        year,
        quantity,
        price,
        rank() over(
            partition by product_id
            order by year
        ) rank
    from sales
)

select
    product_id,
    year as first_year,
    quantity,
    price
from year_rank
where rank = 1;

--Q4
select
    class
from courses
group by class
having count(student) >= 5;

--Q5
select
    user_id,
    count(follower_id) as followers_count
from followers
group by user_id
order by user_id;

--Q6
with n as(
    select
        num
    from mynumbers
    group by num
    having count(num) = 1
)

select 
    max(num) as num
from n;

--Q7
select
    customer_id
from customer 
group by customer_id
having count(distinct product_key) = (select count(distinct product_key) from product);

